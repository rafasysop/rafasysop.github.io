{"version":3,"sources":["components/MovieRow.js","Tmdb.js","components/DestaqueMovie.js","assets/logo.svg","components/Header.js","App.js","index.js"],"names":["title","itens","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","xx","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","getMovieInfo","movieId","type","info","console","log","ano","last_air_date","split","genres","i","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","vote_average","number_of_seasons","overview","join","black","Logo","movieList","setMovieList","destaqueData","setDestaqueData","setBlack","useEffect","Tmdb","list","originals","filter","ramdomChosen","floor","random","chosen","id","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d326d277.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, itens}) => {\n\n    const [scrollX, setScrollX] = useState(0);\n\n    const handleLeftArrow = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n        if(x > 0){\n            x = 20;\n        }\n        setScrollX(x);\n    }\n\n    const handleRightArrow = () => {\n        let x = scrollX + (-Math.round(window.innerWidth / 2));\n        let xx = (itens.results.length * 150);\n        if((window.innerWidth - xx > x) ){\n            x = (window.innerWidth - xx) - 60;\n        }\n        setScrollX(x);\n    }\n\n    return(\n        <div className=\"movieRow\">\n           <h2>{title}</h2> \n               <div className=\"movieRow-left\" onClick={handleLeftArrow} >\n                   <NavigateBeforeIcon style={{fontSize: 50}} />\n               </div>\n                <div className=\"movieRow-right\" onClick={handleRightArrow}>\n                    <NavigateNextIcon style={{fontSize: 50}} />\n                </div>\n           <div className=\"movieRow-listarea\" style ={{\n               marginLeft: scrollX,\n               width: (itens.results.length * 150),\n           }}>\n               <div className=\"movieRow-list\">\n                   {itens.results.length > 0 && itens.results.map((item, key) => (\n                       <div key={key} className=\"movieRow-item\"> \n\n                           <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}  />\n                       </div>\n                    ))}\n                </div>\n           </div>\n        </div>\n    )\n}","// https://api.themoviedb.org/3/movie/550?api_key=46d756d00a8c6b12fb9abce397dce724&language=pt-BR\nconst API_KEY = '46d756d00a8c6b12fb9abce397dce724';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais do Netflix',\n                itens: await basicFetch(`/discover/tv?with_networks=213&language=pt-BR&api_key=${API_KEY}`),\n            }, {\n                slug: 'trending',\n                title: 'Recomendados para Você',\n                itens: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`),\n            }, {\n                slug: 'toprated',\n                title: 'Em Alta',\n                itens: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`),\n            }, {\n                slug: 'action',\n                title: 'Ação',\n                itens: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`),\n            }, {\n                slug: 'commedy',\n                title: 'Comédia',\n                itens: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`),\n            }, {\n                slug: 'horror',\n                title: 'Terror',\n                itens: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`),\n            }, {\n                slug: 'romance',\n                title: 'Romance',\n                itens: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`),\n            }, {\n                slug: 'documentary',\n                title: 'Documentarios',\n                itens: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`),\n            },\n        ];\n    },\n    getMovieInfo: async (movieId, type) => {\n        let info = {};\n\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n                    break;\n\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n                    break;\n                default:\n                    info = null;\n                    break;\n            }\n        }\n\n        return info;\n    }\n}","import React from 'react';\nimport './DestaqueMovie.css';\n\nexport default ({ item }) => {\n    console.log(item);\n    let data = item.last_air_date;\n    let ano = data.split('-');\n\n    let genres = [];\n    for(let i in item.genres){\n        genres.push( item.genres[i].name);\n    }\n    return(\n        <section className=\"destaque\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"destaque-vertical\">\n                <div className=\"destaque-horizontal\">\n                    <div className=\"destaque-name\">\n                        {item.name}\n                    </div>\n                    <div className=\"destaque-info\">\n                        <div className=\"destaque-pontos\">{item.vote_average} pontos</div>\n                        <div className=\"destaque-ano\">{ano[0]}</div>\n                        <div className=\"destaque-temporadas\">{item.number_of_seasons} Temporada{item.number_of_seasons !== 1 ? 's' : ''} </div>\n                        <div className=\"destaque-desc\">{item.overview}</div>\n                        <div className=\"destaque-buttons\">\n                            <button className=\"destaque-button1\">▶ Assistir</button>\n                            <button className=\"destaque-button2\">+ Minha Lista</button>\n                        </div>\n                        <div className=\"destaque-geners\">\n                            <strong>Genero:</strong> {genres.join(', ')} \n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        </section>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo.5787551b.svg\";","import React from 'react';\nimport './Header.css';\nimport Logo from '../assets/logo.svg'\n\nexport default ({ black }) => {\n    return (\n        <header className={black ? 'header black' : 'header'}>\n                <div className=\"logo\"><img src={Logo} alt=\"Netflix\" /> </div>\n                <div className=\"dev\">Desenvolvido por Rafael Moura</div>\n        </header>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport MovieRow from './components/MovieRow';\nimport Tmdb from \"./Tmdb\";\nimport \"./App.css\";\nimport DestaqueMovie from './components/DestaqueMovie';\nimport Header from './components/Header';\n\n// let app = '';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [destaqueData, setDestaqueData] = useState(null);\n  const [black, setBlack] = useState(false);\n\n  useEffect(()=> {\n    const loadAll = async () => {\n      // Pegando toda a Lista\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      let originals = list.filter(i => i.slug === 'originals');\n      let ramdomChosen = Math.floor(Math.random() * (originals[0].itens.results.length -1));\n      let chosen = originals[0].itens.results[ramdomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setDestaqueData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n\n  useEffect(()=> {\n    const scrollListener = () => {\n      if(window.scrollY > 10){\n        setBlack(true);\n      } else {\n        setBlack(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n  \n    return (\n      <div className=\"page\">\n        <Header black={black} />\n        {destaqueData &&\n          <DestaqueMovie item={destaqueData} />\n        }\n        <section className=\"lists\">\n          {movieList.map((item, key) => (\n            <MovieRow key={key} title={item.title} itens={item.itens} />\n          ))}\n        </section>\n        <footer>\n         <p>Desenvolvido por Rafael Costa Moura</p>\n         <p>Direitos de Imagem para Netflix </p>\n         <p>Dados obtidos na API theMoviodb.org</p> \n        </footer>\n        {movieList <= 0 &&\n        \n        \n        <div className=\"loading\">\n          <img src=\"https://cdn.lowgif.com/full/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"Carregando\" />\n        </div>}\n\n      </div>\n       );\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}